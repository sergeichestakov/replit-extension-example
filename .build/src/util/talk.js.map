{
  "version": 3,
  "sources": ["../../../src/util/talk.ts"],
  "sourcesContent": ["// @ts-nocheck temporary (@lunaroyster)\nimport { debug } from \"./log\";\n\n/**\nMethods for the client to speak with the workspace\n**/\n\n/*\n  A handler to route incoming messages\n*/\nconst messageQueue = {};\nconst messageHandler = (ev) => {\n  debug(\"message received\", ev);\n  const { data } = ev;\n\n  if (!messageQueue[data?.id]) {\n    return;\n  }\n\n  messageQueue[data.id](data.payload);\n  delete messageQueue[data.id];\n};\n\n/*\n  Registers listener for incoming messages\n*/\nexport function registerMessageListener() {\n  debug(\"registering message handler\");\n  window.addEventListener(\"message\", messageHandler);\n\n  return () => {\n    debug(\"deregistering message handler\");\n    window.removeEventListener(\"message\", messageHandler);\n  };\n}\n\nexport async function handshake({ permissions, timeout }) {\n  debug(\"\uD83E\uDD1D\");\n\n  const res = await new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      debug(\"handshake timed out\");\n      reject(new Error(\"timeout\"));\n    }, timeout);\n\n    return request({ type: \"handshake\", permissions })\n      .then((res) => {\n        if (res.error) {\n          throw res.error;\n        }\n\n        if (res.success !== true) {\n          throw \"handshake not successful\";\n        }\n\n        debug(\"handshake succeeded\");\n        clearTimeout(timeoutId);\n        resolve(res);\n      })\n      .catch((err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      });\n  });\n\n  return res;\n}\n\n/*\n  Send a message, expect a response\n*/\nexport async function request(\n  payload\n): Promise<{ id: string; payload: any; error: any; success: boolean }> {\n  const id = Math.random();\n\n  return new Promise((resolve) => {\n    messageQueue[id] = resolve;\n\n    parent.postMessage(\n      {\n        id,\n        payload,\n      },\n      \"*\"\n    );\n  });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,iBAAsB;AAStB,MAAM,eAAe;AACrB,MAAM,iBAAiB,CAAC,OAAO;AAC7B,wBAAM,oBAAoB;AAC1B,QAAM,EAAE,SAAS;AAEjB,MAAI,CAAC,aAAa,6BAAM,KAAK;AAC3B;AAAA;AAGF,eAAa,KAAK,IAAI,KAAK;AAC3B,SAAO,aAAa,KAAK;AAAA;AAMpB,mCAAmC;AACxC,wBAAM;AACN,SAAO,iBAAiB,WAAW;AAEnC,SAAO,MAAM;AACX,0BAAM;AACN,WAAO,oBAAoB,WAAW;AAAA;AAAA;AAI1C,yBAAgC,EAAE,aAAa,WAAW;AACxD,wBAAM;AAEN,QAAM,MAAM,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACjD,UAAM,YAAY,WAAW,MAAM;AACjC,4BAAM;AACN,aAAO,IAAI,MAAM;AAAA,OAChB;AAEH,WAAO,QAAQ,EAAE,MAAM,aAAa,eACjC,KAAK,CAAC,SAAQ;AACb,UAAI,KAAI,OAAO;AACb,cAAM,KAAI;AAAA;AAGZ,UAAI,KAAI,YAAY,MAAM;AACxB,cAAM;AAAA;AAGR,4BAAM;AACN,mBAAa;AACb,cAAQ;AAAA,OAET,MAAM,CAAC,QAAQ;AACd,mBAAa;AACb,aAAO;AAAA;AAAA;AAIb,SAAO;AAAA;AAMT,uBACE,SACqE;AACrE,QAAM,KAAK,KAAK;AAEhB,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,iBAAa,MAAM;AAEnB,WAAO,YACL;AAAA,MACE;AAAA,MACA;AAAA,OAEF;AAAA;AAAA;",
  "names": []
}
